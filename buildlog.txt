# Bake Begins!
### (1 of 6) Copy sources
$ cp -a /home/travis/build/fontdirectory/sortsmillgoudy/METADATA.json /home/travis/build/fontdirectory/sortsmillgoudy/builds/build
$ cp -a /home/travis/build/fontdirectory/sortsmillgoudy/DESCRIPTION.en_us.html /home/travis/build/fontdirectory/sortsmillgoudy/builds/build
$ cp -a SortsMillGoudy-Italic.ttf.ttx SortsMillGoudy-Regular.ttf.ttx src/SortsMillGoudy-Regular-TTF.sfd src/SortsMillGoudy-Italic-TTF.sfd SortsMillGoudy-Italic.ttf._p_o_s_t.ttx SortsMillGoudy-Italic.ttf._h_h_e_a.ttx SortsMillGoudy-Italic.ttf.G_D_E_F_.ttx SortsMillGoudy-Italic.ttf._h_e_a_d.ttx SortsMillGoudy-Italic.ttf._m_a_x_p.ttx SortsMillGoudy-Italic.ttf._h_m_t_x.ttx SortsMillGoudy-Italic.ttf._n_a_m_e.ttx SortsMillGoudy-Italic.ttf._p_r_e_p.ttx SortsMillGoudy-Italic.ttf.G_P_O_S_.ttx SortsMillGoudy-Italic.ttf.F_F_T_M_.ttx SortsMillGoudy-Italic.ttf._g_l_y_f.ttx SortsMillGoudy-Italic.ttf.D_S_I_G_.ttx SortsMillGoudy-Italic.ttf._c_m_a_p.ttx SortsMillGoudy-Italic.ttf.O_S_2f_2.ttx SortsMillGoudy-Italic.ttf._l_o_c_a.ttx SortsMillGoudy-Italic.ttf._g_a_s_p.ttx SortsMillGoudy-Italic.ttf.G_S_U_B_.ttx SortsMillGoudy-Italic.ttf.GlyphOrder.ttx SortsMillGoudy-Regular.ttf._n_a_m_e.ttx SortsMillGoudy-Regular.ttf._h_h_e_a.ttx SortsMillGoudy-Regular.ttf._g_l_y_f.ttx SortsMillGoudy-Regular.ttf.G_P_O_S_.ttx SortsMillGoudy-Regular.ttf._h_m_t_x.ttx SortsMillGoudy-Regular.ttf._l_o_c_a.ttx SortsMillGoudy-Regular.ttf.O_S_2f_2.ttx SortsMillGoudy-Regular.ttf._p_r_e_p.ttx SortsMillGoudy-Regular.ttf._p_o_s_t.ttx SortsMillGoudy-Regular.ttf._g_a_s_p.ttx SortsMillGoudy-Regular.ttf.GlyphOrder.ttx SortsMillGoudy-Regular.ttf._h_e_a_d.ttx SortsMillGoudy-Regular.ttf.G_S_U_B_.ttx SortsMillGoudy-Regular.ttf.G_D_E_F_.ttx SortsMillGoudy-Regular.ttf._m_a_x_p.ttx SortsMillGoudy-Regular.ttf.F_F_T_M_.ttx SortsMillGoudy-Regular.ttf._c_m_a_p.ttx SortsMillGoudy-Regular.ttf.D_S_I_G_.ttx /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/sources
$ cp -a /home/travis/build/fontdirectory/sortsmillgoudy/FONTLOG.txt /home/travis/build/fontdirectory/sortsmillgoudy/builds/build
### (2 of 6) pyfontaine
### (3 of 6) Run upstream tests
$ fontbakery-check.py upstream-repo sources
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_bakery_yaml_exists(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_copyright_notices_same_across_family(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_description_html_exists(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_fontlog_txt_exists(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_metadata_json_exists(): OK
$ fontaine --collections subsets --text /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/sources/SortsMillGoudy-Italic.ttf.ttx /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/sources/SortsMillGoudy-Regular.ttf.ttx /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/sources/SortsMillGoudy-Regular-TTF.sfd /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/sources/SortsMillGoudy-Italic-TTF.sfd > fontaine.txt
WARNING: Please install [PyICU](https://pypi.python.org/pypi/PyICU) toenable [feature], perhaps with: pip install pyicu
pyfontaine error: Not a TrueType or OpenType font (bad sfntVersion)
pyfontaine process has been failed
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_prepolation_glyph_contours(): OK
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_prepolation_glyph_points(): OK
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_test_prepolation_glyph_names(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_component(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_mark_to_mark(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_own_glyphs(): OK
$ fontbakery-check.py upstream-ttx SortsMillGoudy-Italic.ttf.ttx
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/sources/SortsMillGoudy-Italic.ttf.ttx /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/sources/SortsMillGoudy-Italic.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
$ fontbakery-check.py upstream-ttx SortsMillGoudy-Regular.ttf.ttx
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/sources/SortsMillGoudy-Regular.ttf.ttx /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/sources/SortsMillGoudy-Regular.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
$ fontbakery-check.py upstream SortsMillGoudy-Regular-TTF.sfd
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_has_rupee(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_A(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_A_a_glyph_instance(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_ended_ufo(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_folder(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_fsType_eq_1(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_it_exists(): ERROR
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): ERROR
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_familyname_less_than_32_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_fullfontname_less_than_64_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_postscriptname_consistof_allowed_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_postscriptname_less_than_30_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_stylename_less_than_32_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_weight_value_range_between_250_and_900(): OK
bakery_lint.tests.upstream.test_unicode_value_should_appear_only_once_per_font.UnicodeValueShouldAppearOnlyOnce.testUnicodeValue(): ERROR
bakery_lint.tests.upstream.test_contour_count.TestContourCount.test_contour_count(): ERROR
$ fontbakery-check.py upstream SortsMillGoudy-Italic-TTF.sfd
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_has_rupee(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_A(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_A_a_glyph_instance(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_ended_ufo(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_folder(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_fsType_eq_1(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_it_exists(): ERROR
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): ERROR
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_familyname_less_than_32_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_fullfontname_less_than_64_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_postscriptname_consistof_allowed_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_postscriptname_less_than_30_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_stylename_less_than_32_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_weight_value_range_between_250_and_900(): OK
bakery_lint.tests.upstream.test_unicode_value_should_appear_only_once_per_font.UnicodeValueShouldAppearOnlyOnce.testUnicodeValue(): ERROR
bakery_lint.tests.upstream.test_contour_count.TestContourCount.test_contour_count(): ERROR
### (4 of 6) Convert sources to TTF
$ ttx -d /home/travis/build/fontdirectory/sortsmillgoudy/builds/build /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/sources/SortsMillGoudy-Regular.ttx /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/sources/SortsMillGoudy-Italic.ttx
strippedname:/home/travis/build/fontdirectory/sortsmillgoudy/builds/build/sources/SortsMillGoudy-Regular-TTF.sfd
strippedname:/home/travis/build/fontdirectory/sortsmillgoudy/builds/build/sources/SortsMillGoudy-Italic-TTF.sfd
Compiling "/home/travis/build/fontdirectory/sortsmillgoudy/builds/build/sources/SortsMillGoudy-Regular.ttx" to "/home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'cmap' table...
Parsing 'prep' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'FFTM' table...
Parsing 'GDEF' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Parsing 'DSIG' table...
Compiling "/home/travis/build/fontdirectory/sortsmillgoudy/builds/build/sources/SortsMillGoudy-Italic.ttx" to "/home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'cmap' table...
Parsing 'prep' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'FFTM' table...
Parsing 'GDEF' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Parsing 'DSIG' table...
### Test SortsMillGoudy-Regular.ttf
$ fontbakery-check.py result SortsMillGoudy-Regular.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular.ttf
$ mv /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular.ttf.fix /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
The glyph named f_f is mapped to U+F018B.
But its name indicates it should be mapped to U+FB00.
The glyph named f_i is mapped to U+F018C.
But its name indicates it should be mapped to U+FB01.
The glyph named f_l is mapped to U+F018D.
But its name indicates it should be mapped to U+FB02.
The glyph named f_f_i is mapped to U+F018E.
But its name indicates it should be mapped to U+FB03.
The glyph named f_f_l is mapped to U+F018F.
But its name indicates it should be mapped to U+FB04.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular.ttf
$ mv /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular.ttf.fix /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular.ttf
$ mv /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular.ttf.fix /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular.ttf
$ mv /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular.ttf.fix /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular.ttf
### Optimize TTF SortsMillGoudy-Regular.ttf
$ ls -l 'SortsMillGoudy-Regular.ttf'* # look at the size savings of that subset process
SortsMillGoudy-Regular.ttf.opt: 112804 bytes
SortsMillGoudy-Regular.ttf: 119432 bytes
$ mv /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular.ttf.opt /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular.ttf
### Autohint TTFs (ttfautohint) SortsMillGoudy-Regular.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular.ttf '/home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular.ttf: 112804 bytes
/home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular.autohint.ttf: 143696 bytes
$ mv /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular.autohint.ttf /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular.ttf
### Subset TTFs (pyftsubset) SortsMillGoudy-Regular.ttf
$ pyftsubset SortsMillGoudy-Regular.latin
$ pyftsubset SortsMillGoudy-Regular.menu
strippedname:/home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular.ttf
### Test SortsMillGoudy-Italic.ttf
$ fontbakery-check.py result SortsMillGoudy-Italic.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic.ttf
$ mv /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic.ttf.fix /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
The glyph named f_f is mapped to U+F018C.
But its name indicates it should be mapped to U+FB00.
The glyph named f_i is mapped to U+F018D.
But its name indicates it should be mapped to U+FB01.
The glyph named f_l is mapped to U+F018E.
But its name indicates it should be mapped to U+FB02.
The glyph named f_f_i is mapped to U+F018F.
But its name indicates it should be mapped to U+FB03.
The glyph named f_f_l is mapped to U+F0190.
But its name indicates it should be mapped to U+FB04.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic.ttf
$ mv /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic.ttf.fix /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic.ttf
$ mv /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic.ttf.fix /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic.ttf
$ mv /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic.ttf.fix /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic.ttf
$ mv /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic.ttf.fix /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic.ttf
### Optimize TTF SortsMillGoudy-Italic.ttf
$ ls -l 'SortsMillGoudy-Italic.ttf'* # look at the size savings of that subset process
SortsMillGoudy-Italic.ttf.opt: 99992 bytes
SortsMillGoudy-Italic.ttf: 105304 bytes
$ mv /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic.ttf.opt /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic.ttf
### Autohint TTFs (ttfautohint) SortsMillGoudy-Italic.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic.ttf '/home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic.ttf: 99992 bytes
/home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic.autohint.ttf: 127780 bytes
$ mv /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic.autohint.ttf /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic.ttf
### Subset TTFs (pyftsubset) SortsMillGoudy-Italic.ttf
$ pyftsubset SortsMillGoudy-Italic.latin
$ pyftsubset SortsMillGoudy-Italic.menu
strippedname:/home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic.ttf
$ fontbakery-build-font2ttf.py sources/SortsMillGoudy-Regular-TTF.sfd SortsMillGoudy-Regular-TTF.ttf
Success: Generated OpenType-TTF (/home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular-TTF.ttf)
### Test SortsMillGoudy-Regular-TTF.ttf
$ fontbakery-check.py result SortsMillGoudy-Regular-TTF.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular-TTF.ttf
$ mv /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular-TTF.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
The glyph named f_f is mapped to U+F018B.
But its name indicates it should be mapped to U+FB00.
The glyph named f_i is mapped to U+F018C.
But its name indicates it should be mapped to U+FB01.
The glyph named f_l is mapped to U+F018D.
But its name indicates it should be mapped to U+FB02.
The glyph named f_f_i is mapped to U+F018E.
But its name indicates it should be mapped to U+FB03.
The glyph named f_f_l is mapped to U+F018F.
But its name indicates it should be mapped to U+FB04.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular-TTF.ttf
$ mv /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular-TTF.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular-TTF.ttf
$ mv /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular-TTF.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular-TTF.ttf
$ mv /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular-TTF.ttf
### Optimize TTF SortsMillGoudy-Regular-TTF.ttf
$ ls -l 'SortsMillGoudy-Regular-TTF.ttf'* # look at the size savings of that subset process
SortsMillGoudy-Regular-TTF.ttf.opt: 110992 bytes
SortsMillGoudy-Regular-TTF.ttf: 120004 bytes
$ mv /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular-TTF.ttf.opt /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular-TTF.ttf
### Autohint TTFs (ttfautohint) SortsMillGoudy-Regular-TTF.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular-TTF.ttf '/home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular-TTF.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular-TTF.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular-TTF.ttf: 110992 bytes
/home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular-TTF.autohint.ttf: 141240 bytes
$ mv /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular-TTF.autohint.ttf /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular-TTF.ttf
### Subset TTFs (pyftsubset) SortsMillGoudy-Regular-TTF.ttf
$ pyftsubset SortsMillGoudy-Regular-TTF.latin
$ pyftsubset SortsMillGoudy-Regular-TTF.menu
strippedname:/home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Regular-TTF.ttf
$ fontbakery-build-font2ttf.py sources/SortsMillGoudy-Italic-TTF.sfd SortsMillGoudy-Italic-TTF.ttf
Internal Error: Invalid 2nd order spline in SplineRefigure2
Internal Error: Invalid 2nd order spline in SplineRefigure2
Success: Generated OpenType-TTF (/home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic-TTF.ttf)
### Test SortsMillGoudy-Italic-TTF.ttf
$ fontbakery-check.py result SortsMillGoudy-Italic-TTF.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic-TTF.ttf
$ mv /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic-TTF.ttf.fix /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic-TTF.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
The glyph named f_f is mapped to U+F018C.
But its name indicates it should be mapped to U+FB00.
The glyph named f_i is mapped to U+F018D.
But its name indicates it should be mapped to U+FB01.
The glyph named f_l is mapped to U+F018E.
But its name indicates it should be mapped to U+FB02.
The glyph named f_f_i is mapped to U+F018F.
But its name indicates it should be mapped to U+FB03.
The glyph named f_f_l is mapped to U+F0190.
But its name indicates it should be mapped to U+FB04.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic-TTF.ttf
$ mv /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic-TTF.ttf.fix /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic-TTF.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic-TTF.ttf
$ mv /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic-TTF.ttf.fix /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic-TTF.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic-TTF.ttf
$ mv /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic-TTF.ttf.fix /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic-TTF.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic-TTF.ttf
$ mv /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic-TTF.ttf.fix /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic-TTF.ttf
### Optimize TTF SortsMillGoudy-Italic-TTF.ttf
$ ls -l 'SortsMillGoudy-Italic-TTF.ttf'* # look at the size savings of that subset process
SortsMillGoudy-Italic-TTF.ttf.opt: 98088 bytes
SortsMillGoudy-Italic-TTF.ttf: 104184 bytes
$ mv /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic-TTF.ttf.opt /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic-TTF.ttf
### Autohint TTFs (ttfautohint) SortsMillGoudy-Italic-TTF.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic-TTF.ttf '/home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic-TTF.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic-TTF.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic-TTF.ttf: 98088 bytes
/home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic-TTF.autohint.ttf: 124672 bytes
$ mv /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic-TTF.autohint.ttf /home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic-TTF.ttf
### Subset TTFs (pyftsubset) SortsMillGoudy-Italic-TTF.ttf
$ pyftsubset SortsMillGoudy-Italic-TTF.latin
$ pyftsubset SortsMillGoudy-Italic-TTF.menu
strippedname:/home/travis/build/fontdirectory/sortsmillgoudy/builds/build/SortsMillGoudy-Italic-TTF.ttf
### (5 of 6) Generate METADATA.json (fontbakery-build-metadata.py)
$ fontbakery-build-metadata.py /home/travis/build/fontdirectory/sortsmillgoudy/builds/build
{} exists
No Designer Name known, using Multiple Designers for now...
Original size: 143696\nGzip size: 60206
Family Name: Sorts Mill Goudy
PS Name: SortsMillGoudy-Regular
Full Name: Sorts Mill Goudy Regular
Style: normal
Weight: 400
Filename: SortsMillGoudy-Regular.ttf
Copyright: Copyright (c) 2010, Barry Schwartz (chemoelectric@chemoelectric.org)
Family Name: Sorts Mill Goudy
PS Name: SortsMillGoudy-Regular
Full Name: Sorts Mill Goudy Regular
Style: normal
Weight: 400
Filename: SortsMillGoudy-Regular-TTF.ttf
Copyright: Copyright (c) 2010, Barry Schwartz (chemoelectric@chemoelectric.org)\n
Family Name: Sorts Mill Goudy
PS Name: SortsMillGoudy-Italic
Full Name: Sorts Mill Goudy Italic
Style: italic
Weight: 400
Filename: SortsMillGoudy-Italic.ttf
Copyright: Copyright (c) 2010, Barry Schwartz (chemoelectric@chemoelectric.org)
Family Name: Sorts Mill Goudy
PS Name: SortsMillGoudy-Italic
Full Name: Sorts Mill Goudy Italic
Style: italic
Weight: 400
Filename: SortsMillGoudy-Italic-TTF.ttf
Copyright: Copyright (c) 2010, Barry Schwartz (chemoelectric@chemoelectric.org)
### (6 of 6) Run tests for METADATA.json
$ fontbakery-check.py metadata METADATA.json
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_latin(): OK
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_latin_ext(): FAIL
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_menu(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_description_is_more_than_500b(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_description_is_valid_html(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_daltonmaag_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontbureau_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontscom_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontshop_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontsmith_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_houseind_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_myfonts_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_veer_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_family_is_listed_in_gwf(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_atleast_latin_menu_subsets_exist(): OK
/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/bakery_lint/tests/metadata_test.py:141: UnicodeWarning: Unicode equal comparison failed to convert both arguments to Unicode - interpreting them as being unequal
  self.assertTrue(designer in designers,
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_designer_exists_in_profiles_csv(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_items_dicts(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_key_list(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_no_dupes(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_has_unique_style_weight_pairs(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_keys(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_license(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_no_unknown_top_keys(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_subsets_key_list(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_top_keys_types(): OK
bakery_lint.tests.downstream.test_check_subsets_exists.CheckSubsetsExist.test_check_subsets_exists(): FAIL
bakery_lint.tests.downstream.test_check_metadata_matches_nametable.CheckMetadataMatchesNameTable.test_check_metadata_matches_nametable(): OK
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_contains_correct_rfn(): FAIL
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_is_consistent_across_family(): OK
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_matches_pattern(): OK
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_metadata_copyright_size(): OK
bakery_lint.tests.downstream.test_check_familyname_matches_fontnames.CheckFamilyNameMatchesFontNames.test_check_familyname_matches_fontnames(): OK
bakery_lint.tests.downstream.test_check_metadata_fields.CheckMetadataFields.test_check_metadata_fields(): OK
bakery_lint.tests.downstream.test_check_files_menu_agreements.CheckFontsMenuAgreements.test_menu_file_agreement(): OK
bakery_lint.tests.downstream.test_check_canonical_weights.CheckCanonicalWeights.test_check_canonical_weights(): OK
bakery_lint.tests.downstream.test_check_canonical_weights.CheckPostScriptNameMatchesWeight.test_postscriptname_contains_correct_weight(): OK
bakery_lint.tests.downstream.test_check_canonical_weights.CheckFontWeightSameAsInMetadata.test_font_weight_same_as_in_metadata(): OK
bakery_lint.tests.downstream.test_check_canonical_weights.CheckFullNameEqualCanonicalName.test_metadata_contains_current_font(): OK
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_copyrighttxt_exists(): FAIL
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_description_exists(): OK
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_fontlogtxt_exists(): OK
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_licensetxt_exists(): FAIL
bakery_lint.tests.downstream.test_check_menu_contains_proper_glyphs.CheckMenuSubsetContainsProperGlyphs.test_check_menu_contains_proper_glyphs(): OK
bakery_lint.tests.downstream.test_check_font_name_not_in_camelcase.CheckFontNameNotInCamelCase.test_fontname_not_in_camel_case(): OK
bakery_lint.tests.downstream.test_check_canonical_filenames.CheckCanonicalFilenames.test_check_canonical_filenames(): OK
bakery_lint.tests.downstream.test_metadata_agreements.TestFontOnDiskFamilyEqualToMetadataJSON.test_font_on_disk_family_equal_in_metadata_json(): OK
bakery_lint.tests.downstream.test_metadata_agreements.TestPostScriptNameInMetadataEqualFontOnDisk.test_postscriptname_in_metadata_equal_to_font_on_disk(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_font_name_matches_family(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_family_values_are_all_the_same(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_filename_matches_postscriptname(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_font_have_regular(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fonts_fields_have_fontname(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fullname_is_equal_to_internal_font_fullname(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fullname_matches_postScriptName(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_regular_is_400(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_regular_is_normal(): OK
bakery_lint.tests.downstream.test_check_metadata_style_matches_names.CheckItalicStyleMatchesMacStyle.test_check_italic_style_matches_names(): FAIL
bakery_lint.tests.downstream.test_check_metadata_style_matches_names.CheckNormalStyleMatchesMacStyle.test_check_normal_style_matches_names(): OK
bakery_lint.tests.downstream.test_check_monospace_agreements.CheckMonospaceAgreement.test_check_monospace_agreement(): OK
bakery_lint.tests.downstream.test_check_canonical_styles.CheckCanonicalStyles.test_check_canonical_styles(): OK
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_encodings_of_glyphs_across_family(): OK
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_names_of_glyphs_across_family(): FAIL
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_number_of_glyphs_across_family(): FAIL
{
  "name": "Sorts Mill Goudy", 
  "designer": "Barry Schwartz", 
  "license": "OFL", 
  "visibility": "External", 
  "category": "Serif", 
  "size": 48655, 
  "fonts": [
    {
      "name": "Sorts Mill Goudy", 
      "postScriptName": "SortsMillGoudy-Regular", 
      "fullName": "Sorts Mill Goudy Regular", 
      "style": "normal", 
      "weight": 400, 
      "filename": "SortsMillGoudy-Regular.ttf", 
      "copyright": "Copyright (c) 2010, Barry Schwartz (chemoelectric@chemoelectric.org)"
    }, 
    {
      "name": "Sorts Mill Goudy", 
      "postScriptName": "SortsMillGoudy-Regular", 
      "fullName": "Sorts Mill Goudy Regular", 
      "style": "normal", 
      "weight": 400, 
      "filename": "SortsMillGoudy-Regular-TTF.ttf", 
      "copyright": "Copyright (c) 2010, Barry Schwartz (chemoelectric@chemoelectric.org)\n"
    }, 
    {
      "name": "Sorts Mill Goudy", 
      "postScriptName": "SortsMillGoudy-Italic", 
      "fullName": "Sorts Mill Goudy Italic", 
      "style": "italic", 
      "weight": 400, 
      "filename": "SortsMillGoudy-Italic.ttf", 
      "copyright": "Copyright (c) 2010, Barry Schwartz (chemoelectric@chemoelectric.org)"
    }, 
    {
      "name": "Sorts Mill Goudy", 
      "postScriptName": "SortsMillGoudy-Italic", 
      "fullName": "Sorts Mill Goudy Italic", 
      "style": "italic", 
      "weight": 400, 
      "filename": "SortsMillGoudy-Italic-TTF.ttf", 
      "copyright": "Copyright (c) 2010, Barry Schwartz (chemoelectric@chemoelectric.org)"
    }
  ], 
  "subsets": [
    "latin", 
    "menu"
  ], 
  "dateAdded": "2011-09-07"
}
